/* tslint:disable */
import { GraphQLResolveInfo, GraphQLScalarType } from 'graphql';
/**
 * This file is auto-generated by graphql-schema-typescript
 * Please note that any changes in this file may be overwritten
 */
 

/*******************************
 *                             *
 *          TYPE DEFS          *
 *                             *
 *******************************/
export interface GQLQuery {
  
  /**
   * Connection to all SitePage nodes
   */
  allSitePage?: GQLSitePageConnection;
  
  /**
   * Connection to all SitePlugin nodes
   */
  allSitePlugin?: GQLSitePluginConnection;
  
  /**
   * Connection to all Directory nodes
   */
  allDirectory?: GQLDirectoryConnection;
  
  /**
   * Connection to all File nodes
   */
  allFile?: GQLFileConnection;
  
  /**
   * Connection to all MarkdownRemark nodes
   */
  allMarkdownRemark?: GQLMarkdownRemarkConnection;
  sitePage?: GQLSitePage;
  sitePlugin?: GQLSitePlugin;
  site?: GQLSite;
  directory?: GQLDirectory;
  file?: GQLFile;
  markdownRemark?: GQLMarkdownRemark;
}

export interface GQLsitePageConnectionSort {
  fields: Array<GQLSitePageConnectionSortByFieldsEnum | null>;
  order?: GQLsitePageConnectionSortOrderValues;
}

export enum GQLSitePageConnectionSortByFieldsEnum {
  jsonName = 'jsonName',
  internalComponentName = 'internalComponentName',
  path = 'path',
  component = 'component',
  componentChunkName = 'componentChunkName',
  pluginCreator___NODE = 'pluginCreator___NODE',
  pluginCreatorId = 'pluginCreatorId',
  componentPath = 'componentPath',
  id = 'id',
  parent = 'parent',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner'
}

export enum GQLsitePageConnectionSortOrderValues {
  ASC = 'ASC',
  DESC = 'DESC'
}

/**
 * Filter connection on its fields
 */
export interface GQLfilterSitePage {
  jsonName?: GQLsitePageConnectionJsonNameQueryString;
  internalComponentName?: GQLsitePageConnectionInternalComponentNameQueryString;
  path?: GQLsitePageConnectionPathQueryString_2;
  component?: GQLsitePageConnectionComponentQueryString;
  componentChunkName?: GQLsitePageConnectionComponentChunkNameQueryString;
  pluginCreator?: GQLsitePageConnectionPluginCreatorInputObject;
  pluginCreatorId?: GQLsitePageConnectionPluginCreatorIdQueryString_2;
  componentPath?: GQLsitePageConnectionComponentPathQueryString;
  id?: GQLsitePageConnectionIdQueryString_2;
  internal?: GQLsitePageConnectionInternalInputObject_2;
}

export interface GQLsitePageConnectionJsonNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionInternalComponentNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionComponentQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionComponentChunkNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorInputObject {
  resolve?: GQLsitePageConnectionPluginCreatorResolveQueryString;
  id?: GQLsitePageConnectionPluginCreatorIdQueryString;
  name?: GQLsitePageConnectionPluginCreatorNameQueryString;
  version?: GQLsitePageConnectionPluginCreatorVersionQueryString;
  pluginOptions?: GQLsitePageConnectionPluginCreatorPluginOptionsInputObject;
  nodeAPIs?: GQLsitePageConnectionPluginCreatorNodeApIsQueryList;
  pluginFilepath?: GQLsitePageConnectionPluginCreatorPluginFilepathQueryString;
  packageJson?: GQLsitePageConnectionPluginCreatorPackageJsonInputObject;
  parent?: GQLsitePageConnectionPluginCreatorParentQueryString;
  internal?: GQLsitePageConnectionPluginCreatorInternalInputObject;
}

export interface GQLsitePageConnectionPluginCreatorResolveQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorIdQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPluginOptionsInputObject {
  name?: GQLsitePageConnectionPluginCreatorPluginOptionsNameQueryString;
  path?: GQLsitePageConnectionPluginCreatorPluginOptionsPathQueryString;
  pathCheck?: GQLsitePageConnectionPluginCreatorPluginOptionsPathCheckQueryBoolean;
}

export interface GQLsitePageConnectionPluginCreatorPluginOptionsNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPluginOptionsPathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPluginOptionsPathCheckQueryBoolean {
  eq?: boolean;
  ne?: boolean;
  in?: Array<boolean | null>;
  nin?: Array<boolean | null>;
}

export interface GQLsitePageConnectionPluginCreatorNodeApIsQueryList {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPluginFilepathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonInputObject {
  name?: GQLsitePageConnectionPluginCreatorPackageJsonNameQueryString;
  description?: GQLsitePageConnectionPluginCreatorPackageJsonDescriptionQueryString;
  version?: GQLsitePageConnectionPluginCreatorPackageJsonVersionQueryString;
  main?: GQLsitePageConnectionPluginCreatorPackageJsonMainQueryString;
  author?: GQLsitePageConnectionPluginCreatorPackageJsonAuthorQueryString;
  license?: GQLsitePageConnectionPluginCreatorPackageJsonLicenseQueryString;
  dependencies?: GQLsitePageConnectionPluginCreatorPackageJsonDependenciesQueryList;
  devDependencies?: GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesQueryList;
  peerDependencies?: GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesQueryList;
  keywords?: GQLsitePageConnectionPluginCreatorPackageJsonKeywordsQueryList;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDescriptionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonMainQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonAuthorQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonLicenseQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDependenciesQueryList {
  elemMatch?: GQLsitePageConnectionPluginCreatorPackageJsonDependenciesInputObject;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDependenciesInputObject {
  name?: GQLsitePageConnectionPluginCreatorPackageJsonDependenciesNameQueryString;
  version?: GQLsitePageConnectionPluginCreatorPackageJsonDependenciesVersionQueryString;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesQueryList {
  elemMatch?: GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesInputObject;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesInputObject {
  name?: GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesNameQueryString;
  version?: GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesVersionQueryString;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonDevDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesQueryList {
  elemMatch?: GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesInputObject;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesInputObject {
  name?: GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesNameQueryString;
  version?: GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesVersionQueryString;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonPeerDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorPackageJsonKeywordsQueryList {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorParentQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorInternalInputObject {
  contentDigest?: GQLsitePageConnectionPluginCreatorInternalContentDigestQueryString;
  type?: GQLsitePageConnectionPluginCreatorInternalTypeQueryString;
  owner?: GQLsitePageConnectionPluginCreatorInternalOwnerQueryString;
}

export interface GQLsitePageConnectionPluginCreatorInternalContentDigestQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorInternalTypeQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorInternalOwnerQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionPluginCreatorIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionComponentPathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionInternalInputObject_2 {
  type?: GQLsitePageConnectionInternalTypeQueryString_2;
  contentDigest?: GQLsitePageConnectionInternalContentDigestQueryString_2;
  description?: GQLsitePageConnectionInternalDescriptionQueryString;
  owner?: GQLsitePageConnectionInternalOwnerQueryString_2;
}

export interface GQLsitePageConnectionInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionInternalDescriptionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageConnectionInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

/**
 * A connection to a list of items.
 */
export interface GQLSitePageConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLSitePageEdge | null>;
  totalCount?: number;
  distinct?: Array<string | null>;
  group?: Array<GQLsitePageGroupConnectionConnection | null>;
}

/**
 * Information about pagination in a connection.
 */
export interface GQLPageInfo {
  
  /**
   * When paginating, are there more items?
   */
  hasNextPage: boolean;
}

/**
 * An edge in a connection.
 */
export interface GQLSitePageEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLSitePage;
  
  /**
   * The next edge in the connection
   */
  next?: GQLSitePage;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLSitePage;
}

/**
 * Node of type SitePage
 */
export interface GQLSitePage extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  jsonName?: string;
  internalComponentName?: string;
  path?: string;
  component?: string;
  componentChunkName?: string;
  pluginCreator?: GQLSitePlugin;
  pluginCreatorId?: string;
  componentPath?: string;
  internal?: GQLinternal_7;
}

/**
 * An object with an id, parent, and children
 */
export interface GQLNode {
  
  /**
   * The id of the node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
}

/** Use this to resolve interface type Node */
export type GQLPossibleNodeTypeNames =
'SitePage' |
'SitePlugin' |
'Directory' |
'File' |
'MarkdownRemark' |
'Site';

export interface GQLNodeNameMap {
  Node: GQLNode;
  SitePage: GQLSitePage;
  SitePlugin: GQLSitePlugin;
  Directory: GQLDirectory;
  File: GQLFile;
  MarkdownRemark: GQLMarkdownRemark;
  Site: GQLSite;
}

/**
 * Node of type SitePlugin
 */
export interface GQLSitePlugin extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  resolve?: string;
  name?: string;
  version?: string;
  pluginOptions?: GQLpluginOptions_2;
  nodeAPIs?: Array<string | null>;
  pluginFilepath?: string;
  packageJson?: GQLpackageJson_2;
  internal?: GQLinternal_8;
}

export interface GQLpluginOptions_2 {
  name?: string;
  path?: string;
  pathCheck?: boolean;
}

export interface GQLpackageJson_2 {
  name?: string;
  description?: string;
  version?: string;
  main?: string;
  author?: string;
  license?: string;
  dependencies?: Array<GQLdependencies_2 | null>;
  devDependencies?: Array<GQLdevDependencies_2 | null>;
  peerDependencies?: Array<GQLpeerDependencies_2 | null>;
  keywords?: Array<string | null>;
}

export interface GQLdependencies_2 {
  name?: string;
  version?: string;
}

export interface GQLdevDependencies_2 {
  name?: string;
  version?: string;
}

export interface GQLpeerDependencies_2 {
  name?: string;
  version?: string;
}

export interface GQLinternal_8 {
  contentDigest?: string;
  type?: string;
  owner?: string;
}

export interface GQLinternal_7 {
  type?: string;
  contentDigest?: string;
  description?: string;
  owner?: string;
}

export enum GQLsitePageDistinctEnum {
  jsonName = 'jsonName',
  internalComponentName = 'internalComponentName',
  path = 'path',
  component = 'component',
  componentChunkName = 'componentChunkName',
  pluginCreator___NODE = 'pluginCreator___NODE',
  pluginCreatorId = 'pluginCreatorId',
  componentPath = 'componentPath',
  id = 'id',
  parent = 'parent',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner'
}

export enum GQLsitePageGroupEnum {
  jsonName = 'jsonName',
  internalComponentName = 'internalComponentName',
  path = 'path',
  component = 'component',
  componentChunkName = 'componentChunkName',
  pluginCreator___NODE = 'pluginCreator___NODE',
  pluginCreatorId = 'pluginCreatorId',
  componentPath = 'componentPath',
  id = 'id',
  parent = 'parent',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner'
}

/**
 * A connection to a list of items.
 */
export interface GQLsitePageGroupConnectionConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLsitePageGroupConnectionEdge | null>;
  field?: string;
  fieldValue?: string;
  totalCount?: number;
}

/**
 * An edge in a connection.
 */
export interface GQLsitePageGroupConnectionEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLSitePage;
  
  /**
   * The next edge in the connection
   */
  next?: GQLSitePage;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLSitePage;
}

export interface GQLsitePluginConnectionSort {
  fields: Array<GQLSitePluginConnectionSortByFieldsEnum | null>;
  order?: GQLsitePluginConnectionSortOrderValues;
}

export enum GQLSitePluginConnectionSortByFieldsEnum {
  resolve = 'resolve',
  id = 'id',
  name = 'name',
  version = 'version',
  pluginOptions___name = 'pluginOptions___name',
  pluginOptions___path = 'pluginOptions___path',
  pluginOptions___pathCheck = 'pluginOptions___pathCheck',
  nodeAPIs = 'nodeAPIs',
  pluginFilepath = 'pluginFilepath',
  packageJson___name = 'packageJson___name',
  packageJson___description = 'packageJson___description',
  packageJson___version = 'packageJson___version',
  packageJson___main = 'packageJson___main',
  packageJson___author = 'packageJson___author',
  packageJson___license = 'packageJson___license',
  packageJson___dependencies = 'packageJson___dependencies',
  packageJson___devDependencies = 'packageJson___devDependencies',
  packageJson___peerDependencies = 'packageJson___peerDependencies',
  packageJson___keywords = 'packageJson___keywords',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___owner = 'internal___owner'
}

export enum GQLsitePluginConnectionSortOrderValues {
  ASC = 'ASC',
  DESC = 'DESC'
}

/**
 * Filter connection on its fields
 */
export interface GQLfilterSitePlugin {
  resolve?: GQLsitePluginConnectionResolveQueryString_2;
  id?: GQLsitePluginConnectionIdQueryString_2;
  name?: GQLsitePluginConnectionNameQueryString_2;
  version?: GQLsitePluginConnectionVersionQueryString_2;
  pluginOptions?: GQLsitePluginConnectionPluginOptionsInputObject_2;
  nodeAPIs?: GQLsitePluginConnectionNodeApIsQueryList_2;
  pluginFilepath?: GQLsitePluginConnectionPluginFilepathQueryString_2;
  packageJson?: GQLsitePluginConnectionPackageJsonInputObject_2;
  internal?: GQLsitePluginConnectionInternalInputObject_2;
}

export interface GQLsitePluginConnectionResolveQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPluginOptionsInputObject_2 {
  name?: GQLsitePluginConnectionPluginOptionsNameQueryString_2;
  path?: GQLsitePluginConnectionPluginOptionsPathQueryString_2;
  pathCheck?: GQLsitePluginConnectionPluginOptionsPathCheckQueryBoolean_2;
}

export interface GQLsitePluginConnectionPluginOptionsNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPluginOptionsPathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPluginOptionsPathCheckQueryBoolean_2 {
  eq?: boolean;
  ne?: boolean;
  in?: Array<boolean | null>;
  nin?: Array<boolean | null>;
}

export interface GQLsitePluginConnectionNodeApIsQueryList_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPluginFilepathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonInputObject_2 {
  name?: GQLsitePluginConnectionPackageJsonNameQueryString_2;
  description?: GQLsitePluginConnectionPackageJsonDescriptionQueryString_2;
  version?: GQLsitePluginConnectionPackageJsonVersionQueryString_2;
  main?: GQLsitePluginConnectionPackageJsonMainQueryString_2;
  author?: GQLsitePluginConnectionPackageJsonAuthorQueryString_2;
  license?: GQLsitePluginConnectionPackageJsonLicenseQueryString_2;
  dependencies?: GQLsitePluginConnectionPackageJsonDependenciesQueryList_2;
  devDependencies?: GQLsitePluginConnectionPackageJsonDevDependenciesQueryList_2;
  peerDependencies?: GQLsitePluginConnectionPackageJsonPeerDependenciesQueryList_2;
  keywords?: GQLsitePluginConnectionPackageJsonKeywordsQueryList_2;
}

export interface GQLsitePluginConnectionPackageJsonNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonMainQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonAuthorQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonLicenseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginConnectionPackageJsonDependenciesInputObject_2;
}

export interface GQLsitePluginConnectionPackageJsonDependenciesInputObject_2 {
  name?: GQLsitePluginConnectionPackageJsonDependenciesNameQueryString_2;
  version?: GQLsitePluginConnectionPackageJsonDependenciesVersionQueryString_2;
}

export interface GQLsitePluginConnectionPackageJsonDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonDevDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginConnectionPackageJsonDevDependenciesInputObject_2;
}

export interface GQLsitePluginConnectionPackageJsonDevDependenciesInputObject_2 {
  name?: GQLsitePluginConnectionPackageJsonDevDependenciesNameQueryString_2;
  version?: GQLsitePluginConnectionPackageJsonDevDependenciesVersionQueryString_2;
}

export interface GQLsitePluginConnectionPackageJsonDevDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonDevDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonPeerDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginConnectionPackageJsonPeerDependenciesInputObject_2;
}

export interface GQLsitePluginConnectionPackageJsonPeerDependenciesInputObject_2 {
  name?: GQLsitePluginConnectionPackageJsonPeerDependenciesNameQueryString_2;
  version?: GQLsitePluginConnectionPackageJsonPeerDependenciesVersionQueryString_2;
}

export interface GQLsitePluginConnectionPackageJsonPeerDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonPeerDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionPackageJsonKeywordsQueryList_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionInternalInputObject_2 {
  contentDigest?: GQLsitePluginConnectionInternalContentDigestQueryString_2;
  type?: GQLsitePluginConnectionInternalTypeQueryString_2;
  owner?: GQLsitePluginConnectionInternalOwnerQueryString_2;
}

export interface GQLsitePluginConnectionInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginConnectionInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

/**
 * A connection to a list of items.
 */
export interface GQLSitePluginConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLSitePluginEdge | null>;
  totalCount?: number;
  distinct?: Array<string | null>;
  group?: Array<GQLsitePluginGroupConnectionConnection | null>;
}

/**
 * An edge in a connection.
 */
export interface GQLSitePluginEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLSitePlugin;
  
  /**
   * The next edge in the connection
   */
  next?: GQLSitePlugin;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLSitePlugin;
}

export enum GQLsitePluginDistinctEnum {
  resolve = 'resolve',
  id = 'id',
  name = 'name',
  version = 'version',
  pluginOptions___name = 'pluginOptions___name',
  pluginOptions___path = 'pluginOptions___path',
  pluginOptions___pathCheck = 'pluginOptions___pathCheck',
  nodeAPIs = 'nodeAPIs',
  pluginFilepath = 'pluginFilepath',
  packageJson___name = 'packageJson___name',
  packageJson___description = 'packageJson___description',
  packageJson___version = 'packageJson___version',
  packageJson___main = 'packageJson___main',
  packageJson___author = 'packageJson___author',
  packageJson___license = 'packageJson___license',
  packageJson___dependencies = 'packageJson___dependencies',
  packageJson___devDependencies = 'packageJson___devDependencies',
  packageJson___peerDependencies = 'packageJson___peerDependencies',
  packageJson___keywords = 'packageJson___keywords',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___owner = 'internal___owner'
}

export enum GQLsitePluginGroupEnum {
  resolve = 'resolve',
  id = 'id',
  name = 'name',
  version = 'version',
  pluginOptions___name = 'pluginOptions___name',
  pluginOptions___path = 'pluginOptions___path',
  pluginOptions___pathCheck = 'pluginOptions___pathCheck',
  nodeAPIs = 'nodeAPIs',
  pluginFilepath = 'pluginFilepath',
  packageJson___name = 'packageJson___name',
  packageJson___description = 'packageJson___description',
  packageJson___version = 'packageJson___version',
  packageJson___main = 'packageJson___main',
  packageJson___author = 'packageJson___author',
  packageJson___license = 'packageJson___license',
  packageJson___dependencies = 'packageJson___dependencies',
  packageJson___devDependencies = 'packageJson___devDependencies',
  packageJson___peerDependencies = 'packageJson___peerDependencies',
  packageJson___keywords = 'packageJson___keywords',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___owner = 'internal___owner'
}

/**
 * A connection to a list of items.
 */
export interface GQLsitePluginGroupConnectionConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLsitePluginGroupConnectionEdge | null>;
  field?: string;
  fieldValue?: string;
  totalCount?: number;
}

/**
 * An edge in a connection.
 */
export interface GQLsitePluginGroupConnectionEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLSitePlugin;
  
  /**
   * The next edge in the connection
   */
  next?: GQLSitePlugin;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLSitePlugin;
}

export interface GQLdirectoryConnectionSort {
  fields: Array<GQLDirectoryConnectionSortByFieldsEnum | null>;
  order?: GQLdirectoryConnectionSortOrderValues;
}

export enum GQLDirectoryConnectionSortByFieldsEnum {
  id = 'id',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime'
}

export enum GQLdirectoryConnectionSortOrderValues {
  ASC = 'ASC',
  DESC = 'DESC'
}

/**
 * Filter connection on its fields
 */
export interface GQLfilterDirectory {
  id?: GQLdirectoryConnectionIdQueryString_2;
  internal?: GQLdirectoryConnectionInternalInputObject_2;
  sourceInstanceName?: GQLdirectoryConnectionSourceInstanceNameQueryString_2;
  absolutePath?: GQLdirectoryConnectionAbsolutePathQueryString_2;
  relativePath?: GQLdirectoryConnectionRelativePathQueryString_2;
  extension?: GQLdirectoryConnectionExtensionQueryString_2;
  size?: GQLdirectoryConnectionSizeQueryInteger_2;
  prettySize?: GQLdirectoryConnectionPrettySizeQueryString_2;
  modifiedTime?: GQLdirectoryConnectionModifiedTimeQueryString_2;
  accessTime?: GQLdirectoryConnectionAccessTimeQueryString_2;
  changeTime?: GQLdirectoryConnectionChangeTimeQueryString_2;
  birthTime?: GQLdirectoryConnectionBirthTimeQueryString_2;
  root?: GQLdirectoryConnectionRootQueryString_2;
  dir?: GQLdirectoryConnectionDirQueryString_2;
  base?: GQLdirectoryConnectionBaseQueryString_2;
  ext?: GQLdirectoryConnectionExtQueryString_2;
  name?: GQLdirectoryConnectionNameQueryString_2;
  relativeDirectory?: GQLdirectoryConnectionRelativeDirectoryQueryString_2;
  dev?: GQLdirectoryConnectionDevQueryInteger_2;
  mode?: GQLdirectoryConnectionModeQueryInteger_2;
  nlink?: GQLdirectoryConnectionNlinkQueryInteger_2;
  uid?: GQLdirectoryConnectionUidQueryInteger_2;
  gid?: GQLdirectoryConnectionGidQueryInteger_2;
  rdev?: GQLdirectoryConnectionRdevQueryInteger_2;
  blksize?: GQLdirectoryConnectionBlksizeQueryInteger_2;
  ino?: GQLdirectoryConnectionInoQueryInteger_2;
  blocks?: GQLdirectoryConnectionBlocksQueryInteger_2;
  atimeMs?: GQLdirectoryConnectionAtimeMsQueryFloat_2;
  mtimeMs?: GQLdirectoryConnectionMtimeMsQueryFloat_2;
  ctimeMs?: GQLdirectoryConnectionCtimeMsQueryFloat_2;
  birthtimeMs?: GQLdirectoryConnectionBirthtimeMsQueryFloat_2;
  atime?: GQLdirectoryConnectionAtimeQueryString_2;
  mtime?: GQLdirectoryConnectionMtimeQueryString_2;
  ctime?: GQLdirectoryConnectionCtimeQueryString_2;
  birthtime?: GQLdirectoryConnectionBirthtimeQueryString_2;
}

export interface GQLdirectoryConnectionIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionInternalInputObject_2 {
  contentDigest?: GQLdirectoryConnectionInternalContentDigestQueryString_2;
  type?: GQLdirectoryConnectionInternalTypeQueryString_2;
  description?: GQLdirectoryConnectionInternalDescriptionQueryString_2;
  owner?: GQLdirectoryConnectionInternalOwnerQueryString_2;
}

export interface GQLdirectoryConnectionInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionInternalDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionSourceInstanceNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionRelativePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionExtensionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionSizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionPrettySizeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionModifiedTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionAccessTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionChangeTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionBirthTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionRootQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionDirQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionBaseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionExtQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionRelativeDirectoryQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionDevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionModeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionNlinkQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionUidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionGidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionRdevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionBlksizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionInoQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionBlocksQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionAtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionMtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionCtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionBirthtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryConnectionAtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionMtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionCtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryConnectionBirthtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

/**
 * A connection to a list of items.
 */
export interface GQLDirectoryConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLDirectoryEdge | null>;
  totalCount?: number;
  distinct?: Array<string | null>;
  group?: Array<GQLdirectoryGroupConnectionConnection | null>;
}

/**
 * An edge in a connection.
 */
export interface GQLDirectoryEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLDirectory;
  
  /**
   * The next edge in the connection
   */
  next?: GQLDirectory;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLDirectory;
}

/**
 * Node of type Directory
 */
export interface GQLDirectory extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  internal?: GQLinternal_9;
  sourceInstanceName?: string;
  absolutePath?: string;
  relativePath?: string;
  extension?: string;
  size?: number;
  prettySize?: string;
  modifiedTime?: GQLDate;
  accessTime?: GQLDate;
  changeTime?: GQLDate;
  birthTime?: GQLDate;
  root?: string;
  dir?: string;
  base?: string;
  ext?: string;
  name?: string;
  relativeDirectory?: string;
  dev?: number;
  mode?: number;
  nlink?: number;
  uid?: number;
  gid?: number;
  rdev?: number;
  blksize?: number;
  ino?: number;
  blocks?: number;
  atimeMs?: number;
  mtimeMs?: number;
  ctimeMs?: number;
  birthtimeMs?: number;
  atime?: GQLDate;
  mtime?: GQLDate;
  ctime?: GQLDate;
  birthtime?: GQLDate;
}

export interface GQLinternal_9 {
  contentDigest?: string;
  type?: string;
  description?: string;
  owner?: string;
}

/**
 * A date string, such as 2007-12-03, compliant with the ISO 8601 standard  for
 * representation of dates and times using the Gregorian calendar.
 */
export type GQLDate = any;

export enum GQLdirectoryDistinctEnum {
  id = 'id',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime'
}

export enum GQLdirectoryGroupEnum {
  id = 'id',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime'
}

/**
 * A connection to a list of items.
 */
export interface GQLdirectoryGroupConnectionConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLdirectoryGroupConnectionEdge | null>;
  field?: string;
  fieldValue?: string;
  totalCount?: number;
}

/**
 * An edge in a connection.
 */
export interface GQLdirectoryGroupConnectionEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLDirectory;
  
  /**
   * The next edge in the connection
   */
  next?: GQLDirectory;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLDirectory;
}

export interface GQLfileConnectionSort {
  fields: Array<GQLFileConnectionSortByFieldsEnum | null>;
  order?: GQLfileConnectionSortOrderValues;
}

export enum GQLFileConnectionSortByFieldsEnum {
  id = 'id',
  children = 'children',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___mediaType = 'internal___mediaType',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime',
  publicURL = 'publicURL'
}

export enum GQLfileConnectionSortOrderValues {
  ASC = 'ASC',
  DESC = 'DESC'
}

/**
 * Filter connection on its fields
 */
export interface GQLfilterFile {
  id?: GQLfileConnectionIdQueryString_2;
  internal?: GQLfileConnectionInternalInputObject_2;
  sourceInstanceName?: GQLfileConnectionSourceInstanceNameQueryString_2;
  absolutePath?: GQLfileConnectionAbsolutePathQueryString_2;
  relativePath?: GQLfileConnectionRelativePathQueryString_2;
  extension?: GQLfileConnectionExtensionQueryString_2;
  size?: GQLfileConnectionSizeQueryInteger_2;
  prettySize?: GQLfileConnectionPrettySizeQueryString_2;
  modifiedTime?: GQLfileConnectionModifiedTimeQueryString_2;
  accessTime?: GQLfileConnectionAccessTimeQueryString_2;
  changeTime?: GQLfileConnectionChangeTimeQueryString_2;
  birthTime?: GQLfileConnectionBirthTimeQueryString_2;
  root?: GQLfileConnectionRootQueryString_2;
  dir?: GQLfileConnectionDirQueryString_2;
  base?: GQLfileConnectionBaseQueryString_2;
  ext?: GQLfileConnectionExtQueryString_2;
  name?: GQLfileConnectionNameQueryString_2;
  relativeDirectory?: GQLfileConnectionRelativeDirectoryQueryString_2;
  dev?: GQLfileConnectionDevQueryInteger_2;
  mode?: GQLfileConnectionModeQueryInteger_2;
  nlink?: GQLfileConnectionNlinkQueryInteger_2;
  uid?: GQLfileConnectionUidQueryInteger_2;
  gid?: GQLfileConnectionGidQueryInteger_2;
  rdev?: GQLfileConnectionRdevQueryInteger_2;
  blksize?: GQLfileConnectionBlksizeQueryInteger_2;
  ino?: GQLfileConnectionInoQueryInteger_2;
  blocks?: GQLfileConnectionBlocksQueryInteger_2;
  atimeMs?: GQLfileConnectionAtimeMsQueryFloat_2;
  mtimeMs?: GQLfileConnectionMtimeMsQueryFloat_2;
  ctimeMs?: GQLfileConnectionCtimeMsQueryFloat_2;
  birthtimeMs?: GQLfileConnectionBirthtimeMsQueryFloat_2;
  atime?: GQLfileConnectionAtimeQueryString_2;
  mtime?: GQLfileConnectionMtimeQueryString_2;
  ctime?: GQLfileConnectionCtimeQueryString_2;
  birthtime?: GQLfileConnectionBirthtimeQueryString_2;
  publicURL?: GQLpublicUrlQueryString_4;
}

export interface GQLfileConnectionIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionInternalInputObject_2 {
  contentDigest?: GQLfileConnectionInternalContentDigestQueryString_2;
  type?: GQLfileConnectionInternalTypeQueryString_2;
  mediaType?: GQLfileConnectionInternalMediaTypeQueryString_2;
  description?: GQLfileConnectionInternalDescriptionQueryString_2;
  owner?: GQLfileConnectionInternalOwnerQueryString_2;
}

export interface GQLfileConnectionInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionInternalMediaTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionInternalDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionSourceInstanceNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionRelativePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionExtensionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionSizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionPrettySizeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionModifiedTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionAccessTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionChangeTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionBirthTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionRootQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionDirQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionBaseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionExtQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionRelativeDirectoryQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionDevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionModeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionNlinkQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionUidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionGidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionRdevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionBlksizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionInoQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionBlocksQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionAtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionMtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionCtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionBirthtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileConnectionAtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionMtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionCtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileConnectionBirthtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLpublicUrlQueryString_4 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

/**
 * A connection to a list of items.
 */
export interface GQLFileConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLFileEdge | null>;
  totalCount?: number;
  distinct?: Array<string | null>;
  group?: Array<GQLfileGroupConnectionConnection | null>;
}

/**
 * An edge in a connection.
 */
export interface GQLFileEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLFile;
  
  /**
   * The next edge in the connection
   */
  next?: GQLFile;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLFile;
}

/**
 * Node of type File
 */
export interface GQLFile extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  
  /**
   * The child of this node of type markdownRemark
   */
  childMarkdownRemark?: GQLMarkdownRemark;
  internal?: GQLinternal_10;
  sourceInstanceName?: string;
  absolutePath?: string;
  relativePath?: string;
  extension?: string;
  size?: number;
  prettySize?: string;
  modifiedTime?: GQLDate;
  accessTime?: GQLDate;
  changeTime?: GQLDate;
  birthTime?: GQLDate;
  root?: string;
  dir?: string;
  base?: string;
  ext?: string;
  name?: string;
  relativeDirectory?: string;
  dev?: number;
  mode?: number;
  nlink?: number;
  uid?: number;
  gid?: number;
  rdev?: number;
  blksize?: number;
  ino?: number;
  blocks?: number;
  atimeMs?: number;
  mtimeMs?: number;
  ctimeMs?: number;
  birthtimeMs?: number;
  atime?: GQLDate;
  mtime?: GQLDate;
  ctime?: GQLDate;
  birthtime?: GQLDate;
  
  /**
   * Copy file to static directory and return public url to it
   */
  publicURL?: string;
}

/**
 * Node of type MarkdownRemark
 */
export interface GQLMarkdownRemark extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  internal?: GQLinternal_11;
  frontmatter?: GQLfrontmatter_2;
  rawMarkdownBody?: string;
  fileAbsolutePath?: string;
  html?: string;
  htmlAst?: GQLJSON;
  excerpt?: string;
  headings?: Array<GQLMarkdownHeading | null>;
  timeToRead?: number;
  tableOfContents?: string;
  wordCount?: GQLwordCount;
}

export interface GQLinternal_11 {
  content?: string;
  type?: string;
  contentDigest?: string;
  owner?: string;
}

export interface GQLfrontmatter_2 {
  title?: string;
  path?: string;
  date?: GQLDate;
  _PARENT?: string;
}

/**
 * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
 */
export type GQLJSON = any;

export enum GQLExcerptFormats {
  PLAIN = 'PLAIN',
  HTML = 'HTML'
}

export enum GQLHeadingLevels {
  h1 = 'h1',
  h2 = 'h2',
  h3 = 'h3',
  h4 = 'h4',
  h5 = 'h5',
  h6 = 'h6'
}

export interface GQLMarkdownHeading {
  value?: string;
  depth?: number;
}

export interface GQLwordCount {
  paragraphs?: number;
  sentences?: number;
  words?: number;
}

export interface GQLinternal_10 {
  contentDigest?: string;
  type?: string;
  mediaType?: string;
  description?: string;
  owner?: string;
}

export enum GQLfileDistinctEnum {
  id = 'id',
  children = 'children',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___mediaType = 'internal___mediaType',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime'
}

export enum GQLfileGroupEnum {
  id = 'id',
  children = 'children',
  parent = 'parent',
  internal___contentDigest = 'internal___contentDigest',
  internal___type = 'internal___type',
  internal___mediaType = 'internal___mediaType',
  internal___description = 'internal___description',
  internal___owner = 'internal___owner',
  sourceInstanceName = 'sourceInstanceName',
  absolutePath = 'absolutePath',
  relativePath = 'relativePath',
  extension = 'extension',
  size = 'size',
  prettySize = 'prettySize',
  modifiedTime = 'modifiedTime',
  accessTime = 'accessTime',
  changeTime = 'changeTime',
  birthTime = 'birthTime',
  root = 'root',
  dir = 'dir',
  base = 'base',
  ext = 'ext',
  name = 'name',
  relativeDirectory = 'relativeDirectory',
  dev = 'dev',
  mode = 'mode',
  nlink = 'nlink',
  uid = 'uid',
  gid = 'gid',
  rdev = 'rdev',
  blksize = 'blksize',
  ino = 'ino',
  blocks = 'blocks',
  atimeMs = 'atimeMs',
  mtimeMs = 'mtimeMs',
  ctimeMs = 'ctimeMs',
  birthtimeMs = 'birthtimeMs',
  atime = 'atime',
  mtime = 'mtime',
  ctime = 'ctime',
  birthtime = 'birthtime'
}

/**
 * A connection to a list of items.
 */
export interface GQLfileGroupConnectionConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLfileGroupConnectionEdge | null>;
  field?: string;
  fieldValue?: string;
  totalCount?: number;
}

/**
 * An edge in a connection.
 */
export interface GQLfileGroupConnectionEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLFile;
  
  /**
   * The next edge in the connection
   */
  next?: GQLFile;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLFile;
}

export interface GQLmarkdownRemarkConnectionSort {
  fields: Array<GQLMarkdownRemarkConnectionSortByFieldsEnum | null>;
  order?: GQLmarkdownRemarkConnectionSortOrderValues;
}

export enum GQLMarkdownRemarkConnectionSortByFieldsEnum {
  id = 'id',
  parent = 'parent',
  internal___content = 'internal___content',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___owner = 'internal___owner',
  frontmatter___title = 'frontmatter___title',
  frontmatter___path = 'frontmatter___path',
  frontmatter___date = 'frontmatter___date',
  frontmatter____PARENT = 'frontmatter____PARENT',
  rawMarkdownBody = 'rawMarkdownBody',
  fileAbsolutePath = 'fileAbsolutePath',
  html = 'html',
  excerpt = 'excerpt',
  headings = 'headings',
  timeToRead = 'timeToRead',
  tableOfContents = 'tableOfContents',
  wordCount___paragraphs = 'wordCount___paragraphs',
  wordCount___sentences = 'wordCount___sentences',
  wordCount___words = 'wordCount___words'
}

export enum GQLmarkdownRemarkConnectionSortOrderValues {
  ASC = 'ASC',
  DESC = 'DESC'
}

/**
 * Filter connection on its fields
 */
export interface GQLfilterMarkdownRemark {
  id?: GQLmarkdownRemarkConnectionIdQueryString_2;
  internal?: GQLmarkdownRemarkConnectionInternalInputObject_2;
  frontmatter?: GQLmarkdownRemarkConnectionFrontmatterInputObject_2;
  rawMarkdownBody?: GQLmarkdownRemarkConnectionRawMarkdownBodyQueryString_2;
  fileAbsolutePath?: GQLmarkdownRemarkConnectionFileAbsolutePathQueryString_2;
  html?: GQLhtmlQueryString_4;
  excerpt?: GQLexcerptQueryString_4;
  headings?: GQLheadingsQueryList_4;
  timeToRead?: GQLtimeToReadQueryInt_4;
  tableOfContents?: GQLtableOfContentsQueryString_4;
  wordCount?: GQLwordCountTypeName_4;
}

export interface GQLmarkdownRemarkConnectionIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionInternalInputObject_2 {
  content?: GQLmarkdownRemarkConnectionInternalContentQueryString_2;
  type?: GQLmarkdownRemarkConnectionInternalTypeQueryString_2;
  contentDigest?: GQLmarkdownRemarkConnectionInternalContentDigestQueryString_2;
  owner?: GQLmarkdownRemarkConnectionInternalOwnerQueryString_2;
}

export interface GQLmarkdownRemarkConnectionInternalContentQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionFrontmatterInputObject_2 {
  title?: GQLmarkdownRemarkConnectionFrontmatterTitleQueryString_2;
  path?: GQLmarkdownRemarkConnectionFrontmatterPathQueryString_2;
  date?: GQLmarkdownRemarkConnectionFrontmatterDateQueryString_2;
  _PARENT?: GQLmarkdownRemarkConnectionFrontmatterParentQueryString_2;
}

export interface GQLmarkdownRemarkConnectionFrontmatterTitleQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionFrontmatterPathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionFrontmatterDateQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionFrontmatterParentQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionRawMarkdownBodyQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkConnectionFileAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLhtmlQueryString_4 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLexcerptQueryString_4 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLheadingsQueryList_4 {
  elemMatch?: GQLheadingsListElemTypeName_4;
}

export interface GQLheadingsListElemTypeName_4 {
  value?: GQLheadingsListElemValueQueryString_4;
  depth?: GQLheadingsListElemDepthQueryInt_4;
}

export interface GQLheadingsListElemValueQueryString_4 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLheadingsListElemDepthQueryInt_4 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLtimeToReadQueryInt_4 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLtableOfContentsQueryString_4 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLwordCountTypeName_4 {
  paragraphs?: GQLwordCountParagraphsQueryInt_4;
  sentences?: GQLwordCountSentencesQueryInt_4;
  words?: GQLwordCountWordsQueryInt_4;
}

export interface GQLwordCountParagraphsQueryInt_4 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLwordCountSentencesQueryInt_4 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLwordCountWordsQueryInt_4 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

/**
 * A connection to a list of items.
 */
export interface GQLMarkdownRemarkConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLMarkdownRemarkEdge | null>;
  totalCount?: number;
  distinct?: Array<string | null>;
  group?: Array<GQLmarkdownRemarkGroupConnectionConnection | null>;
}

/**
 * An edge in a connection.
 */
export interface GQLMarkdownRemarkEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLMarkdownRemark;
  
  /**
   * The next edge in the connection
   */
  next?: GQLMarkdownRemark;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLMarkdownRemark;
}

export enum GQLmarkdownRemarkDistinctEnum {
  id = 'id',
  parent = 'parent',
  internal___content = 'internal___content',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___owner = 'internal___owner',
  frontmatter___title = 'frontmatter___title',
  frontmatter___path = 'frontmatter___path',
  frontmatter___date = 'frontmatter___date',
  frontmatter____PARENT = 'frontmatter____PARENT',
  rawMarkdownBody = 'rawMarkdownBody',
  fileAbsolutePath = 'fileAbsolutePath'
}

export enum GQLmarkdownRemarkGroupEnum {
  id = 'id',
  parent = 'parent',
  internal___content = 'internal___content',
  internal___type = 'internal___type',
  internal___contentDigest = 'internal___contentDigest',
  internal___owner = 'internal___owner',
  frontmatter___title = 'frontmatter___title',
  frontmatter___path = 'frontmatter___path',
  frontmatter___date = 'frontmatter___date',
  frontmatter____PARENT = 'frontmatter____PARENT',
  rawMarkdownBody = 'rawMarkdownBody',
  fileAbsolutePath = 'fileAbsolutePath'
}

/**
 * A connection to a list of items.
 */
export interface GQLmarkdownRemarkGroupConnectionConnection {
  
  /**
   * Information to aid in pagination.
   */
  pageInfo: GQLPageInfo;
  
  /**
   * A list of edges.
   */
  edges?: Array<GQLmarkdownRemarkGroupConnectionEdge | null>;
  field?: string;
  fieldValue?: string;
  totalCount?: number;
}

/**
 * An edge in a connection.
 */
export interface GQLmarkdownRemarkGroupConnectionEdge {
  
  /**
   * The item at the end of the edge
   */
  node?: GQLMarkdownRemark;
  
  /**
   * The next edge in the connection
   */
  next?: GQLMarkdownRemark;
  
  /**
   * The previous edge in the connection
   */
  previous?: GQLMarkdownRemark;
}

export interface GQLsitePageJsonNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageInternalComponentNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageComponentQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageComponentChunkNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorInputObject {
  resolve?: GQLsitePagePluginCreatorResolveQueryString;
  id?: GQLsitePagePluginCreatorIdQueryString;
  name?: GQLsitePagePluginCreatorNameQueryString;
  version?: GQLsitePagePluginCreatorVersionQueryString;
  pluginOptions?: GQLsitePagePluginCreatorPluginOptionsInputObject;
  nodeAPIs?: GQLsitePagePluginCreatorNodeApIsQueryList;
  pluginFilepath?: GQLsitePagePluginCreatorPluginFilepathQueryString;
  packageJson?: GQLsitePagePluginCreatorPackageJsonInputObject;
  parent?: GQLsitePagePluginCreatorParentQueryString;
  internal?: GQLsitePagePluginCreatorInternalInputObject;
}

export interface GQLsitePagePluginCreatorResolveQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorIdQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPluginOptionsInputObject {
  name?: GQLsitePagePluginCreatorPluginOptionsNameQueryString;
  path?: GQLsitePagePluginCreatorPluginOptionsPathQueryString;
  pathCheck?: GQLsitePagePluginCreatorPluginOptionsPathCheckQueryBoolean;
}

export interface GQLsitePagePluginCreatorPluginOptionsNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPluginOptionsPathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPluginOptionsPathCheckQueryBoolean {
  eq?: boolean;
  ne?: boolean;
  in?: Array<boolean | null>;
  nin?: Array<boolean | null>;
}

export interface GQLsitePagePluginCreatorNodeApIsQueryList {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPluginFilepathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonInputObject {
  name?: GQLsitePagePluginCreatorPackageJsonNameQueryString;
  description?: GQLsitePagePluginCreatorPackageJsonDescriptionQueryString;
  version?: GQLsitePagePluginCreatorPackageJsonVersionQueryString;
  main?: GQLsitePagePluginCreatorPackageJsonMainQueryString;
  author?: GQLsitePagePluginCreatorPackageJsonAuthorQueryString;
  license?: GQLsitePagePluginCreatorPackageJsonLicenseQueryString;
  dependencies?: GQLsitePagePluginCreatorPackageJsonDependenciesQueryList;
  devDependencies?: GQLsitePagePluginCreatorPackageJsonDevDependenciesQueryList;
  peerDependencies?: GQLsitePagePluginCreatorPackageJsonPeerDependenciesQueryList;
  keywords?: GQLsitePagePluginCreatorPackageJsonKeywordsQueryList;
}

export interface GQLsitePagePluginCreatorPackageJsonNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonDescriptionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonMainQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonAuthorQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonLicenseQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonDependenciesQueryList {
  elemMatch?: GQLsitePagePluginCreatorPackageJsonDependenciesInputObject;
}

export interface GQLsitePagePluginCreatorPackageJsonDependenciesInputObject {
  name?: GQLsitePagePluginCreatorPackageJsonDependenciesNameQueryString;
  version?: GQLsitePagePluginCreatorPackageJsonDependenciesVersionQueryString;
}

export interface GQLsitePagePluginCreatorPackageJsonDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonDevDependenciesQueryList {
  elemMatch?: GQLsitePagePluginCreatorPackageJsonDevDependenciesInputObject;
}

export interface GQLsitePagePluginCreatorPackageJsonDevDependenciesInputObject {
  name?: GQLsitePagePluginCreatorPackageJsonDevDependenciesNameQueryString;
  version?: GQLsitePagePluginCreatorPackageJsonDevDependenciesVersionQueryString;
}

export interface GQLsitePagePluginCreatorPackageJsonDevDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonDevDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonPeerDependenciesQueryList {
  elemMatch?: GQLsitePagePluginCreatorPackageJsonPeerDependenciesInputObject;
}

export interface GQLsitePagePluginCreatorPackageJsonPeerDependenciesInputObject {
  name?: GQLsitePagePluginCreatorPackageJsonPeerDependenciesNameQueryString;
  version?: GQLsitePagePluginCreatorPackageJsonPeerDependenciesVersionQueryString;
}

export interface GQLsitePagePluginCreatorPackageJsonPeerDependenciesNameQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonPeerDependenciesVersionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorPackageJsonKeywordsQueryList {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorParentQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorInternalInputObject {
  contentDigest?: GQLsitePagePluginCreatorInternalContentDigestQueryString;
  type?: GQLsitePagePluginCreatorInternalTypeQueryString;
  owner?: GQLsitePagePluginCreatorInternalOwnerQueryString;
}

export interface GQLsitePagePluginCreatorInternalContentDigestQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorInternalTypeQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorInternalOwnerQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePagePluginCreatorIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageComponentPathQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageInternalInputObject_2 {
  type?: GQLsitePageInternalTypeQueryString_2;
  contentDigest?: GQLsitePageInternalContentDigestQueryString_2;
  description?: GQLsitePageInternalDescriptionQueryString;
  owner?: GQLsitePageInternalOwnerQueryString_2;
}

export interface GQLsitePageInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageInternalDescriptionQueryString {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePageInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginResolveQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPluginOptionsInputObject_2 {
  name?: GQLsitePluginPluginOptionsNameQueryString_2;
  path?: GQLsitePluginPluginOptionsPathQueryString_2;
  pathCheck?: GQLsitePluginPluginOptionsPathCheckQueryBoolean_2;
}

export interface GQLsitePluginPluginOptionsNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPluginOptionsPathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPluginOptionsPathCheckQueryBoolean_2 {
  eq?: boolean;
  ne?: boolean;
  in?: Array<boolean | null>;
  nin?: Array<boolean | null>;
}

export interface GQLsitePluginNodeApIsQueryList_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPluginFilepathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonInputObject_2 {
  name?: GQLsitePluginPackageJsonNameQueryString_2;
  description?: GQLsitePluginPackageJsonDescriptionQueryString_2;
  version?: GQLsitePluginPackageJsonVersionQueryString_2;
  main?: GQLsitePluginPackageJsonMainQueryString_2;
  author?: GQLsitePluginPackageJsonAuthorQueryString_2;
  license?: GQLsitePluginPackageJsonLicenseQueryString_2;
  dependencies?: GQLsitePluginPackageJsonDependenciesQueryList_2;
  devDependencies?: GQLsitePluginPackageJsonDevDependenciesQueryList_2;
  peerDependencies?: GQLsitePluginPackageJsonPeerDependenciesQueryList_2;
  keywords?: GQLsitePluginPackageJsonKeywordsQueryList_2;
}

export interface GQLsitePluginPackageJsonNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonMainQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonAuthorQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonLicenseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginPackageJsonDependenciesInputObject_2;
}

export interface GQLsitePluginPackageJsonDependenciesInputObject_2 {
  name?: GQLsitePluginPackageJsonDependenciesNameQueryString_2;
  version?: GQLsitePluginPackageJsonDependenciesVersionQueryString_2;
}

export interface GQLsitePluginPackageJsonDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonDevDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginPackageJsonDevDependenciesInputObject_2;
}

export interface GQLsitePluginPackageJsonDevDependenciesInputObject_2 {
  name?: GQLsitePluginPackageJsonDevDependenciesNameQueryString_2;
  version?: GQLsitePluginPackageJsonDevDependenciesVersionQueryString_2;
}

export interface GQLsitePluginPackageJsonDevDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonDevDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonPeerDependenciesQueryList_2 {
  elemMatch?: GQLsitePluginPackageJsonPeerDependenciesInputObject_2;
}

export interface GQLsitePluginPackageJsonPeerDependenciesInputObject_2 {
  name?: GQLsitePluginPackageJsonPeerDependenciesNameQueryString_2;
  version?: GQLsitePluginPackageJsonPeerDependenciesVersionQueryString_2;
}

export interface GQLsitePluginPackageJsonPeerDependenciesNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonPeerDependenciesVersionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginPackageJsonKeywordsQueryList_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginInternalInputObject_2 {
  contentDigest?: GQLsitePluginInternalContentDigestQueryString_2;
  type?: GQLsitePluginInternalTypeQueryString_2;
  owner?: GQLsitePluginInternalOwnerQueryString_2;
}

export interface GQLsitePluginInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePluginInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteSiteMetadataInputObject_2 {
  name?: GQLsiteSiteMetadataNameQueryString_2;
  tagline?: GQLsiteSiteMetadataTaglineQueryString_2;
}

export interface GQLsiteSiteMetadataNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteSiteMetadataTaglineQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePortQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteHostQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePathPrefixQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsitePolyfillQueryBoolean_2 {
  eq?: boolean;
  ne?: boolean;
  in?: Array<boolean | null>;
  nin?: Array<boolean | null>;
}

export interface GQLsiteBuildTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteInternalInputObject_2 {
  contentDigest?: GQLsiteInternalContentDigestQueryString_2;
  type?: GQLsiteInternalTypeQueryString_2;
  owner?: GQLsiteInternalOwnerQueryString_2;
}

export interface GQLsiteInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLsiteInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

/**
 * Node of type Site
 */
export interface GQLSite extends GQLNode {
  
  /**
   * The id of this node.
   */
  id: string;
  
  /**
   * The parent of this node.
   */
  parent?: GQLNode;
  
  /**
   * The children of this node.
   */
  children?: Array<GQLNode | null>;
  siteMetadata?: GQLsiteMetadata_2;
  port?: GQLDate;
  host?: string;
  pathPrefix?: string;
  polyfill?: boolean;
  buildTime?: GQLDate;
  internal?: GQLinternal_12;
}

export interface GQLsiteMetadata_2 {
  name?: string;
  tagline?: string;
}

export interface GQLinternal_12 {
  contentDigest?: string;
  type?: string;
  owner?: string;
}

export interface GQLdirectoryIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryInternalInputObject_2 {
  contentDigest?: GQLdirectoryInternalContentDigestQueryString_2;
  type?: GQLdirectoryInternalTypeQueryString_2;
  description?: GQLdirectoryInternalDescriptionQueryString_2;
  owner?: GQLdirectoryInternalOwnerQueryString_2;
}

export interface GQLdirectoryInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryInternalDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectorySourceInstanceNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryRelativePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryExtensionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectorySizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryPrettySizeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryModifiedTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryAccessTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryChangeTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryBirthTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryRootQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryDirQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryBaseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryExtQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryRelativeDirectoryQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryDevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryModeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryNlinkQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryUidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryGidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryRdevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryBlksizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryInoQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryBlocksQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryAtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryMtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryCtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryBirthtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLdirectoryAtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryMtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryCtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLdirectoryBirthtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileInternalInputObject_2 {
  contentDigest?: GQLfileInternalContentDigestQueryString_2;
  type?: GQLfileInternalTypeQueryString_2;
  mediaType?: GQLfileInternalMediaTypeQueryString_2;
  description?: GQLfileInternalDescriptionQueryString_2;
  owner?: GQLfileInternalOwnerQueryString_2;
}

export interface GQLfileInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileInternalMediaTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileInternalDescriptionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileSourceInstanceNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileRelativePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileExtensionQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileSizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfilePrettySizeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileModifiedTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileAccessTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileChangeTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileBirthTimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileRootQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileDirQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileBaseQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileExtQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileNameQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileRelativeDirectoryQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileDevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileModeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileNlinkQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileUidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileGidQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileRdevQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileBlksizeQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileInoQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileBlocksQueryInteger_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileAtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileMtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileCtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileBirthtimeMsQueryFloat_2 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLfileAtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileMtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileCtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLfileBirthtimeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLpublicUrlQueryString_3 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkIdQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkInternalInputObject_2 {
  content?: GQLmarkdownRemarkInternalContentQueryString_2;
  type?: GQLmarkdownRemarkInternalTypeQueryString_2;
  contentDigest?: GQLmarkdownRemarkInternalContentDigestQueryString_2;
  owner?: GQLmarkdownRemarkInternalOwnerQueryString_2;
}

export interface GQLmarkdownRemarkInternalContentQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkInternalTypeQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkInternalContentDigestQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkInternalOwnerQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkFrontmatterInputObject_2 {
  title?: GQLmarkdownRemarkFrontmatterTitleQueryString_2;
  path?: GQLmarkdownRemarkFrontmatterPathQueryString_2;
  date?: GQLmarkdownRemarkFrontmatterDateQueryString_2;
  _PARENT?: GQLmarkdownRemarkFrontmatterParentQueryString_2;
}

export interface GQLmarkdownRemarkFrontmatterTitleQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkFrontmatterPathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkFrontmatterDateQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkFrontmatterParentQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkRawMarkdownBodyQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLmarkdownRemarkFileAbsolutePathQueryString_2 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLhtmlQueryString_3 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLexcerptQueryString_3 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLheadingsQueryList_3 {
  elemMatch?: GQLheadingsListElemTypeName_3;
}

export interface GQLheadingsListElemTypeName_3 {
  value?: GQLheadingsListElemValueQueryString_3;
  depth?: GQLheadingsListElemDepthQueryInt_3;
}

export interface GQLheadingsListElemValueQueryString_3 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLheadingsListElemDepthQueryInt_3 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLtimeToReadQueryInt_3 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLtableOfContentsQueryString_3 {
  eq?: string;
  ne?: string;
  regex?: string;
  glob?: string;
  in?: Array<string | null>;
  nin?: Array<string | null>;
}

export interface GQLwordCountTypeName_3 {
  paragraphs?: GQLwordCountParagraphsQueryInt_3;
  sentences?: GQLwordCountSentencesQueryInt_3;
  words?: GQLwordCountWordsQueryInt_3;
}

export interface GQLwordCountParagraphsQueryInt_3 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLwordCountSentencesQueryInt_3 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

export interface GQLwordCountWordsQueryInt_3 {
  eq?: number;
  ne?: number;
  gt?: number;
  gte?: number;
  lt?: number;
  lte?: number;
  in?: Array<number | null>;
  nin?: Array<number | null>;
}

/*********************************
 *                               *
 *         TYPE RESOLVERS        *
 *                               *
 *********************************/
/**
 * This interface define the shape of your resolver
 * Note that this type is designed to be compatible with graphql-tools resolvers
 * However, you can still use other generated interfaces to make your resolver type-safed
 */
export interface GQLResolver {
  Query?: GQLQueryTypeResolver;
  SitePageConnection?: GQLSitePageConnectionTypeResolver;
  PageInfo?: GQLPageInfoTypeResolver;
  SitePageEdge?: GQLSitePageEdgeTypeResolver;
  SitePage?: GQLSitePageTypeResolver;
  Node?: {
    __resolveType: GQLNodeTypeResolver
  };
  
  SitePlugin?: GQLSitePluginTypeResolver;
  pluginOptions_2?: GQLpluginOptions_2TypeResolver;
  packageJson_2?: GQLpackageJson_2TypeResolver;
  dependencies_2?: GQLdependencies_2TypeResolver;
  devDependencies_2?: GQLdevDependencies_2TypeResolver;
  peerDependencies_2?: GQLpeerDependencies_2TypeResolver;
  internal_8?: GQLinternal_8TypeResolver;
  internal_7?: GQLinternal_7TypeResolver;
  sitePageGroupConnectionConnection?: GQLsitePageGroupConnectionConnectionTypeResolver;
  sitePageGroupConnectionEdge?: GQLsitePageGroupConnectionEdgeTypeResolver;
  SitePluginConnection?: GQLSitePluginConnectionTypeResolver;
  SitePluginEdge?: GQLSitePluginEdgeTypeResolver;
  sitePluginGroupConnectionConnection?: GQLsitePluginGroupConnectionConnectionTypeResolver;
  sitePluginGroupConnectionEdge?: GQLsitePluginGroupConnectionEdgeTypeResolver;
  DirectoryConnection?: GQLDirectoryConnectionTypeResolver;
  DirectoryEdge?: GQLDirectoryEdgeTypeResolver;
  Directory?: GQLDirectoryTypeResolver;
  internal_9?: GQLinternal_9TypeResolver;
  Date?: GraphQLScalarType;
  directoryGroupConnectionConnection?: GQLdirectoryGroupConnectionConnectionTypeResolver;
  directoryGroupConnectionEdge?: GQLdirectoryGroupConnectionEdgeTypeResolver;
  FileConnection?: GQLFileConnectionTypeResolver;
  FileEdge?: GQLFileEdgeTypeResolver;
  File?: GQLFileTypeResolver;
  MarkdownRemark?: GQLMarkdownRemarkTypeResolver;
  internal_11?: GQLinternal_11TypeResolver;
  frontmatter_2?: GQLfrontmatter_2TypeResolver;
  JSON?: GraphQLScalarType;
  MarkdownHeading?: GQLMarkdownHeadingTypeResolver;
  wordCount?: GQLwordCountTypeResolver;
  internal_10?: GQLinternal_10TypeResolver;
  fileGroupConnectionConnection?: GQLfileGroupConnectionConnectionTypeResolver;
  fileGroupConnectionEdge?: GQLfileGroupConnectionEdgeTypeResolver;
  MarkdownRemarkConnection?: GQLMarkdownRemarkConnectionTypeResolver;
  MarkdownRemarkEdge?: GQLMarkdownRemarkEdgeTypeResolver;
  markdownRemarkGroupConnectionConnection?: GQLmarkdownRemarkGroupConnectionConnectionTypeResolver;
  markdownRemarkGroupConnectionEdge?: GQLmarkdownRemarkGroupConnectionEdgeTypeResolver;
  Site?: GQLSiteTypeResolver;
  siteMetadata_2?: GQLsiteMetadata_2TypeResolver;
  internal_12?: GQLinternal_12TypeResolver;
}
export interface GQLQueryTypeResolver<TParent = any> {
  allSitePage?: QueryToAllSitePageResolver<TParent>;
  allSitePlugin?: QueryToAllSitePluginResolver<TParent>;
  allDirectory?: QueryToAllDirectoryResolver<TParent>;
  allFile?: QueryToAllFileResolver<TParent>;
  allMarkdownRemark?: QueryToAllMarkdownRemarkResolver<TParent>;
  sitePage?: QueryToSitePageResolver<TParent>;
  sitePlugin?: QueryToSitePluginResolver<TParent>;
  site?: QueryToSiteResolver<TParent>;
  directory?: QueryToDirectoryResolver<TParent>;
  file?: QueryToFileResolver<TParent>;
  markdownRemark?: QueryToMarkdownRemarkResolver<TParent>;
}

export interface QueryToAllSitePageArgs {
  skip?: number;
  limit?: number;
  sort?: GQLsitePageConnectionSort;
  filter?: GQLfilterSitePage;
}
export interface QueryToAllSitePageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAllSitePageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAllSitePluginArgs {
  skip?: number;
  limit?: number;
  sort?: GQLsitePluginConnectionSort;
  filter?: GQLfilterSitePlugin;
}
export interface QueryToAllSitePluginResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAllSitePluginArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAllDirectoryArgs {
  skip?: number;
  limit?: number;
  sort?: GQLdirectoryConnectionSort;
  filter?: GQLfilterDirectory;
}
export interface QueryToAllDirectoryResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAllDirectoryArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAllFileArgs {
  skip?: number;
  limit?: number;
  sort?: GQLfileConnectionSort;
  filter?: GQLfilterFile;
}
export interface QueryToAllFileResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAllFileArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAllMarkdownRemarkArgs {
  skip?: number;
  limit?: number;
  sort?: GQLmarkdownRemarkConnectionSort;
  filter?: GQLfilterMarkdownRemark;
}
export interface QueryToAllMarkdownRemarkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAllMarkdownRemarkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSitePageArgs {
  jsonName?: GQLsitePageJsonNameQueryString;
  internalComponentName?: GQLsitePageInternalComponentNameQueryString;
  path?: GQLsitePagePathQueryString_2;
  component?: GQLsitePageComponentQueryString;
  componentChunkName?: GQLsitePageComponentChunkNameQueryString;
  pluginCreator?: GQLsitePagePluginCreatorInputObject;
  pluginCreatorId?: GQLsitePagePluginCreatorIdQueryString_2;
  componentPath?: GQLsitePageComponentPathQueryString;
  id?: GQLsitePageIdQueryString_2;
  internal?: GQLsitePageInternalInputObject_2;
}
export interface QueryToSitePageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSitePageArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSitePluginArgs {
  resolve?: GQLsitePluginResolveQueryString_2;
  id?: GQLsitePluginIdQueryString_2;
  name?: GQLsitePluginNameQueryString_2;
  version?: GQLsitePluginVersionQueryString_2;
  pluginOptions?: GQLsitePluginPluginOptionsInputObject_2;
  nodeAPIs?: GQLsitePluginNodeApIsQueryList_2;
  pluginFilepath?: GQLsitePluginPluginFilepathQueryString_2;
  packageJson?: GQLsitePluginPackageJsonInputObject_2;
  internal?: GQLsitePluginInternalInputObject_2;
}
export interface QueryToSitePluginResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSitePluginArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToSiteArgs {
  siteMetadata?: GQLsiteSiteMetadataInputObject_2;
  port?: GQLsitePortQueryString_2;
  host?: GQLsiteHostQueryString_2;
  pathPrefix?: GQLsitePathPrefixQueryString_2;
  polyfill?: GQLsitePolyfillQueryBoolean_2;
  buildTime?: GQLsiteBuildTimeQueryString_2;
  id?: GQLsiteIdQueryString_2;
  internal?: GQLsiteInternalInputObject_2;
}
export interface QueryToSiteResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToSiteArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToDirectoryArgs {
  id?: GQLdirectoryIdQueryString_2;
  internal?: GQLdirectoryInternalInputObject_2;
  sourceInstanceName?: GQLdirectorySourceInstanceNameQueryString_2;
  absolutePath?: GQLdirectoryAbsolutePathQueryString_2;
  relativePath?: GQLdirectoryRelativePathQueryString_2;
  extension?: GQLdirectoryExtensionQueryString_2;
  size?: GQLdirectorySizeQueryInteger_2;
  prettySize?: GQLdirectoryPrettySizeQueryString_2;
  modifiedTime?: GQLdirectoryModifiedTimeQueryString_2;
  accessTime?: GQLdirectoryAccessTimeQueryString_2;
  changeTime?: GQLdirectoryChangeTimeQueryString_2;
  birthTime?: GQLdirectoryBirthTimeQueryString_2;
  root?: GQLdirectoryRootQueryString_2;
  dir?: GQLdirectoryDirQueryString_2;
  base?: GQLdirectoryBaseQueryString_2;
  ext?: GQLdirectoryExtQueryString_2;
  name?: GQLdirectoryNameQueryString_2;
  relativeDirectory?: GQLdirectoryRelativeDirectoryQueryString_2;
  dev?: GQLdirectoryDevQueryInteger_2;
  mode?: GQLdirectoryModeQueryInteger_2;
  nlink?: GQLdirectoryNlinkQueryInteger_2;
  uid?: GQLdirectoryUidQueryInteger_2;
  gid?: GQLdirectoryGidQueryInteger_2;
  rdev?: GQLdirectoryRdevQueryInteger_2;
  blksize?: GQLdirectoryBlksizeQueryInteger_2;
  ino?: GQLdirectoryInoQueryInteger_2;
  blocks?: GQLdirectoryBlocksQueryInteger_2;
  atimeMs?: GQLdirectoryAtimeMsQueryFloat_2;
  mtimeMs?: GQLdirectoryMtimeMsQueryFloat_2;
  ctimeMs?: GQLdirectoryCtimeMsQueryFloat_2;
  birthtimeMs?: GQLdirectoryBirthtimeMsQueryFloat_2;
  atime?: GQLdirectoryAtimeQueryString_2;
  mtime?: GQLdirectoryMtimeQueryString_2;
  ctime?: GQLdirectoryCtimeQueryString_2;
  birthtime?: GQLdirectoryBirthtimeQueryString_2;
}
export interface QueryToDirectoryResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToDirectoryArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToFileArgs {
  id?: GQLfileIdQueryString_2;
  internal?: GQLfileInternalInputObject_2;
  sourceInstanceName?: GQLfileSourceInstanceNameQueryString_2;
  absolutePath?: GQLfileAbsolutePathQueryString_2;
  relativePath?: GQLfileRelativePathQueryString_2;
  extension?: GQLfileExtensionQueryString_2;
  size?: GQLfileSizeQueryInteger_2;
  prettySize?: GQLfilePrettySizeQueryString_2;
  modifiedTime?: GQLfileModifiedTimeQueryString_2;
  accessTime?: GQLfileAccessTimeQueryString_2;
  changeTime?: GQLfileChangeTimeQueryString_2;
  birthTime?: GQLfileBirthTimeQueryString_2;
  root?: GQLfileRootQueryString_2;
  dir?: GQLfileDirQueryString_2;
  base?: GQLfileBaseQueryString_2;
  ext?: GQLfileExtQueryString_2;
  name?: GQLfileNameQueryString_2;
  relativeDirectory?: GQLfileRelativeDirectoryQueryString_2;
  dev?: GQLfileDevQueryInteger_2;
  mode?: GQLfileModeQueryInteger_2;
  nlink?: GQLfileNlinkQueryInteger_2;
  uid?: GQLfileUidQueryInteger_2;
  gid?: GQLfileGidQueryInteger_2;
  rdev?: GQLfileRdevQueryInteger_2;
  blksize?: GQLfileBlksizeQueryInteger_2;
  ino?: GQLfileInoQueryInteger_2;
  blocks?: GQLfileBlocksQueryInteger_2;
  atimeMs?: GQLfileAtimeMsQueryFloat_2;
  mtimeMs?: GQLfileMtimeMsQueryFloat_2;
  ctimeMs?: GQLfileCtimeMsQueryFloat_2;
  birthtimeMs?: GQLfileBirthtimeMsQueryFloat_2;
  atime?: GQLfileAtimeQueryString_2;
  mtime?: GQLfileMtimeQueryString_2;
  ctime?: GQLfileCtimeQueryString_2;
  birthtime?: GQLfileBirthtimeQueryString_2;
  publicURL?: GQLpublicUrlQueryString_3;
}
export interface QueryToFileResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToFileArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToMarkdownRemarkArgs {
  id?: GQLmarkdownRemarkIdQueryString_2;
  internal?: GQLmarkdownRemarkInternalInputObject_2;
  frontmatter?: GQLmarkdownRemarkFrontmatterInputObject_2;
  rawMarkdownBody?: GQLmarkdownRemarkRawMarkdownBodyQueryString_2;
  fileAbsolutePath?: GQLmarkdownRemarkFileAbsolutePathQueryString_2;
  html?: GQLhtmlQueryString_3;
  excerpt?: GQLexcerptQueryString_3;
  headings?: GQLheadingsQueryList_3;
  timeToRead?: GQLtimeToReadQueryInt_3;
  tableOfContents?: GQLtableOfContentsQueryString_3;
  wordCount?: GQLwordCountTypeName_3;
}
export interface QueryToMarkdownRemarkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToMarkdownRemarkArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSitePageConnectionTypeResolver<TParent = any> {
  pageInfo?: SitePageConnectionToPageInfoResolver<TParent>;
  edges?: SitePageConnectionToEdgesResolver<TParent>;
  totalCount?: SitePageConnectionToTotalCountResolver<TParent>;
  distinct?: SitePageConnectionToDistinctResolver<TParent>;
  group?: SitePageConnectionToGroupResolver<TParent>;
}

export interface SitePageConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageConnectionToDistinctArgs {
  field?: GQLsitePageDistinctEnum;
}
export interface SitePageConnectionToDistinctResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SitePageConnectionToDistinctArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageConnectionToGroupArgs {
  skip?: number;
  limit?: number;
  field?: GQLsitePageGroupEnum;
}
export interface SitePageConnectionToGroupResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SitePageConnectionToGroupArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLPageInfoTypeResolver<TParent = any> {
  hasNextPage?: PageInfoToHasNextPageResolver<TParent>;
}

export interface PageInfoToHasNextPageResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSitePageEdgeTypeResolver<TParent = any> {
  node?: SitePageEdgeToNodeResolver<TParent>;
  next?: SitePageEdgeToNextResolver<TParent>;
  previous?: SitePageEdgeToPreviousResolver<TParent>;
}

export interface SitePageEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSitePageTypeResolver<TParent = any> {
  id?: SitePageToIdResolver<TParent>;
  parent?: SitePageToParentResolver<TParent>;
  children?: SitePageToChildrenResolver<TParent>;
  jsonName?: SitePageToJsonNameResolver<TParent>;
  internalComponentName?: SitePageToInternalComponentNameResolver<TParent>;
  path?: SitePageToPathResolver<TParent>;
  component?: SitePageToComponentResolver<TParent>;
  componentChunkName?: SitePageToComponentChunkNameResolver<TParent>;
  pluginCreator?: SitePageToPluginCreatorResolver<TParent>;
  pluginCreatorId?: SitePageToPluginCreatorIdResolver<TParent>;
  componentPath?: SitePageToComponentPathResolver<TParent>;
  internal?: SitePageToInternalResolver<TParent>;
}

export interface SitePageToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToJsonNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToInternalComponentNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToPathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToComponentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToComponentChunkNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToPluginCreatorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToPluginCreatorIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToComponentPathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePageToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLNodeTypeResolver<TParent = any> {
  (parent: TParent, context: any, info: GraphQLResolveInfo): 'SitePage' | 'SitePlugin' | 'Directory' | 'File' | 'MarkdownRemark' | 'Site';
}
export interface GQLSitePluginTypeResolver<TParent = any> {
  id?: SitePluginToIdResolver<TParent>;
  parent?: SitePluginToParentResolver<TParent>;
  children?: SitePluginToChildrenResolver<TParent>;
  resolve?: SitePluginToResolveResolver<TParent>;
  name?: SitePluginToNameResolver<TParent>;
  version?: SitePluginToVersionResolver<TParent>;
  pluginOptions?: SitePluginToPluginOptionsResolver<TParent>;
  nodeAPIs?: SitePluginToNodeAPIsResolver<TParent>;
  pluginFilepath?: SitePluginToPluginFilepathResolver<TParent>;
  packageJson?: SitePluginToPackageJsonResolver<TParent>;
  internal?: SitePluginToInternalResolver<TParent>;
}

export interface SitePluginToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToResolveResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToVersionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToPluginOptionsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToNodeAPIsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToPluginFilepathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToPackageJsonResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLpluginOptions_2TypeResolver<TParent = any> {
  name?: pluginOptions_2ToNameResolver<TParent>;
  path?: pluginOptions_2ToPathResolver<TParent>;
  pathCheck?: pluginOptions_2ToPathCheckResolver<TParent>;
}

export interface pluginOptions_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface pluginOptions_2ToPathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface pluginOptions_2ToPathCheckResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLpackageJson_2TypeResolver<TParent = any> {
  name?: packageJson_2ToNameResolver<TParent>;
  description?: packageJson_2ToDescriptionResolver<TParent>;
  version?: packageJson_2ToVersionResolver<TParent>;
  main?: packageJson_2ToMainResolver<TParent>;
  author?: packageJson_2ToAuthorResolver<TParent>;
  license?: packageJson_2ToLicenseResolver<TParent>;
  dependencies?: packageJson_2ToDependenciesResolver<TParent>;
  devDependencies?: packageJson_2ToDevDependenciesResolver<TParent>;
  peerDependencies?: packageJson_2ToPeerDependenciesResolver<TParent>;
  keywords?: packageJson_2ToKeywordsResolver<TParent>;
}

export interface packageJson_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToVersionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToMainResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToAuthorResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToLicenseResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToDependenciesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToDevDependenciesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToPeerDependenciesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface packageJson_2ToKeywordsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLdependencies_2TypeResolver<TParent = any> {
  name?: dependencies_2ToNameResolver<TParent>;
  version?: dependencies_2ToVersionResolver<TParent>;
}

export interface dependencies_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface dependencies_2ToVersionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLdevDependencies_2TypeResolver<TParent = any> {
  name?: devDependencies_2ToNameResolver<TParent>;
  version?: devDependencies_2ToVersionResolver<TParent>;
}

export interface devDependencies_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface devDependencies_2ToVersionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLpeerDependencies_2TypeResolver<TParent = any> {
  name?: peerDependencies_2ToNameResolver<TParent>;
  version?: peerDependencies_2ToVersionResolver<TParent>;
}

export interface peerDependencies_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface peerDependencies_2ToVersionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_8TypeResolver<TParent = any> {
  contentDigest?: internal_8ToContentDigestResolver<TParent>;
  type?: internal_8ToTypeResolver<TParent>;
  owner?: internal_8ToOwnerResolver<TParent>;
}

export interface internal_8ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_8ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_8ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_7TypeResolver<TParent = any> {
  type?: internal_7ToTypeResolver<TParent>;
  contentDigest?: internal_7ToContentDigestResolver<TParent>;
  description?: internal_7ToDescriptionResolver<TParent>;
  owner?: internal_7ToOwnerResolver<TParent>;
}

export interface internal_7ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_7ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_7ToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_7ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLsitePageGroupConnectionConnectionTypeResolver<TParent = any> {
  pageInfo?: sitePageGroupConnectionConnectionToPageInfoResolver<TParent>;
  edges?: sitePageGroupConnectionConnectionToEdgesResolver<TParent>;
  field?: sitePageGroupConnectionConnectionToFieldResolver<TParent>;
  fieldValue?: sitePageGroupConnectionConnectionToFieldValueResolver<TParent>;
  totalCount?: sitePageGroupConnectionConnectionToTotalCountResolver<TParent>;
}

export interface sitePageGroupConnectionConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionConnectionToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionConnectionToFieldValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLsitePageGroupConnectionEdgeTypeResolver<TParent = any> {
  node?: sitePageGroupConnectionEdgeToNodeResolver<TParent>;
  next?: sitePageGroupConnectionEdgeToNextResolver<TParent>;
  previous?: sitePageGroupConnectionEdgeToPreviousResolver<TParent>;
}

export interface sitePageGroupConnectionEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePageGroupConnectionEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSitePluginConnectionTypeResolver<TParent = any> {
  pageInfo?: SitePluginConnectionToPageInfoResolver<TParent>;
  edges?: SitePluginConnectionToEdgesResolver<TParent>;
  totalCount?: SitePluginConnectionToTotalCountResolver<TParent>;
  distinct?: SitePluginConnectionToDistinctResolver<TParent>;
  group?: SitePluginConnectionToGroupResolver<TParent>;
}

export interface SitePluginConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginConnectionToDistinctArgs {
  field?: GQLsitePluginDistinctEnum;
}
export interface SitePluginConnectionToDistinctResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SitePluginConnectionToDistinctArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginConnectionToGroupArgs {
  skip?: number;
  limit?: number;
  field?: GQLsitePluginGroupEnum;
}
export interface SitePluginConnectionToGroupResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SitePluginConnectionToGroupArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSitePluginEdgeTypeResolver<TParent = any> {
  node?: SitePluginEdgeToNodeResolver<TParent>;
  next?: SitePluginEdgeToNextResolver<TParent>;
  previous?: SitePluginEdgeToPreviousResolver<TParent>;
}

export interface SitePluginEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SitePluginEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLsitePluginGroupConnectionConnectionTypeResolver<TParent = any> {
  pageInfo?: sitePluginGroupConnectionConnectionToPageInfoResolver<TParent>;
  edges?: sitePluginGroupConnectionConnectionToEdgesResolver<TParent>;
  field?: sitePluginGroupConnectionConnectionToFieldResolver<TParent>;
  fieldValue?: sitePluginGroupConnectionConnectionToFieldValueResolver<TParent>;
  totalCount?: sitePluginGroupConnectionConnectionToTotalCountResolver<TParent>;
}

export interface sitePluginGroupConnectionConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionConnectionToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionConnectionToFieldValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLsitePluginGroupConnectionEdgeTypeResolver<TParent = any> {
  node?: sitePluginGroupConnectionEdgeToNodeResolver<TParent>;
  next?: sitePluginGroupConnectionEdgeToNextResolver<TParent>;
  previous?: sitePluginGroupConnectionEdgeToPreviousResolver<TParent>;
}

export interface sitePluginGroupConnectionEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface sitePluginGroupConnectionEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLDirectoryConnectionTypeResolver<TParent = any> {
  pageInfo?: DirectoryConnectionToPageInfoResolver<TParent>;
  edges?: DirectoryConnectionToEdgesResolver<TParent>;
  totalCount?: DirectoryConnectionToTotalCountResolver<TParent>;
  distinct?: DirectoryConnectionToDistinctResolver<TParent>;
  group?: DirectoryConnectionToGroupResolver<TParent>;
}

export interface DirectoryConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryConnectionToDistinctArgs {
  field?: GQLdirectoryDistinctEnum;
}
export interface DirectoryConnectionToDistinctResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryConnectionToDistinctArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryConnectionToGroupArgs {
  skip?: number;
  limit?: number;
  field?: GQLdirectoryGroupEnum;
}
export interface DirectoryConnectionToGroupResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryConnectionToGroupArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLDirectoryEdgeTypeResolver<TParent = any> {
  node?: DirectoryEdgeToNodeResolver<TParent>;
  next?: DirectoryEdgeToNextResolver<TParent>;
  previous?: DirectoryEdgeToPreviousResolver<TParent>;
}

export interface DirectoryEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLDirectoryTypeResolver<TParent = any> {
  id?: DirectoryToIdResolver<TParent>;
  parent?: DirectoryToParentResolver<TParent>;
  children?: DirectoryToChildrenResolver<TParent>;
  internal?: DirectoryToInternalResolver<TParent>;
  sourceInstanceName?: DirectoryToSourceInstanceNameResolver<TParent>;
  absolutePath?: DirectoryToAbsolutePathResolver<TParent>;
  relativePath?: DirectoryToRelativePathResolver<TParent>;
  extension?: DirectoryToExtensionResolver<TParent>;
  size?: DirectoryToSizeResolver<TParent>;
  prettySize?: DirectoryToPrettySizeResolver<TParent>;
  modifiedTime?: DirectoryToModifiedTimeResolver<TParent>;
  accessTime?: DirectoryToAccessTimeResolver<TParent>;
  changeTime?: DirectoryToChangeTimeResolver<TParent>;
  birthTime?: DirectoryToBirthTimeResolver<TParent>;
  root?: DirectoryToRootResolver<TParent>;
  dir?: DirectoryToDirResolver<TParent>;
  base?: DirectoryToBaseResolver<TParent>;
  ext?: DirectoryToExtResolver<TParent>;
  name?: DirectoryToNameResolver<TParent>;
  relativeDirectory?: DirectoryToRelativeDirectoryResolver<TParent>;
  dev?: DirectoryToDevResolver<TParent>;
  mode?: DirectoryToModeResolver<TParent>;
  nlink?: DirectoryToNlinkResolver<TParent>;
  uid?: DirectoryToUidResolver<TParent>;
  gid?: DirectoryToGidResolver<TParent>;
  rdev?: DirectoryToRdevResolver<TParent>;
  blksize?: DirectoryToBlksizeResolver<TParent>;
  ino?: DirectoryToInoResolver<TParent>;
  blocks?: DirectoryToBlocksResolver<TParent>;
  atimeMs?: DirectoryToAtimeMsResolver<TParent>;
  mtimeMs?: DirectoryToMtimeMsResolver<TParent>;
  ctimeMs?: DirectoryToCtimeMsResolver<TParent>;
  birthtimeMs?: DirectoryToBirthtimeMsResolver<TParent>;
  atime?: DirectoryToAtimeResolver<TParent>;
  mtime?: DirectoryToMtimeResolver<TParent>;
  ctime?: DirectoryToCtimeResolver<TParent>;
  birthtime?: DirectoryToBirthtimeResolver<TParent>;
}

export interface DirectoryToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToSourceInstanceNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToAbsolutePathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToRelativePathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToExtensionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToSizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToPrettySizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToModifiedTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToModifiedTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToModifiedTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToAccessTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToAccessTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToAccessTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToChangeTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToChangeTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToChangeTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBirthTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToBirthTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToBirthTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToRootResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToDirResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBaseResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToExtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToRelativeDirectoryResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToDevResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToModeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToNlinkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToUidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToGidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToRdevResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBlksizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToInoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBlocksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToAtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToMtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToCtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBirthtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToAtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToAtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToAtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToMtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToMtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToMtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToCtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToCtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToCtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface DirectoryToBirthtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface DirectoryToBirthtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: DirectoryToBirthtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_9TypeResolver<TParent = any> {
  contentDigest?: internal_9ToContentDigestResolver<TParent>;
  type?: internal_9ToTypeResolver<TParent>;
  description?: internal_9ToDescriptionResolver<TParent>;
  owner?: internal_9ToOwnerResolver<TParent>;
}

export interface internal_9ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_9ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_9ToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_9ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLdirectoryGroupConnectionConnectionTypeResolver<TParent = any> {
  pageInfo?: directoryGroupConnectionConnectionToPageInfoResolver<TParent>;
  edges?: directoryGroupConnectionConnectionToEdgesResolver<TParent>;
  field?: directoryGroupConnectionConnectionToFieldResolver<TParent>;
  fieldValue?: directoryGroupConnectionConnectionToFieldValueResolver<TParent>;
  totalCount?: directoryGroupConnectionConnectionToTotalCountResolver<TParent>;
}

export interface directoryGroupConnectionConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionConnectionToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionConnectionToFieldValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLdirectoryGroupConnectionEdgeTypeResolver<TParent = any> {
  node?: directoryGroupConnectionEdgeToNodeResolver<TParent>;
  next?: directoryGroupConnectionEdgeToNextResolver<TParent>;
  previous?: directoryGroupConnectionEdgeToPreviousResolver<TParent>;
}

export interface directoryGroupConnectionEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface directoryGroupConnectionEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLFileConnectionTypeResolver<TParent = any> {
  pageInfo?: FileConnectionToPageInfoResolver<TParent>;
  edges?: FileConnectionToEdgesResolver<TParent>;
  totalCount?: FileConnectionToTotalCountResolver<TParent>;
  distinct?: FileConnectionToDistinctResolver<TParent>;
  group?: FileConnectionToGroupResolver<TParent>;
}

export interface FileConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileConnectionToDistinctArgs {
  field?: GQLfileDistinctEnum;
}
export interface FileConnectionToDistinctResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileConnectionToDistinctArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileConnectionToGroupArgs {
  skip?: number;
  limit?: number;
  field?: GQLfileGroupEnum;
}
export interface FileConnectionToGroupResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileConnectionToGroupArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLFileEdgeTypeResolver<TParent = any> {
  node?: FileEdgeToNodeResolver<TParent>;
  next?: FileEdgeToNextResolver<TParent>;
  previous?: FileEdgeToPreviousResolver<TParent>;
}

export interface FileEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLFileTypeResolver<TParent = any> {
  id?: FileToIdResolver<TParent>;
  parent?: FileToParentResolver<TParent>;
  children?: FileToChildrenResolver<TParent>;
  childMarkdownRemark?: FileToChildMarkdownRemarkResolver<TParent>;
  internal?: FileToInternalResolver<TParent>;
  sourceInstanceName?: FileToSourceInstanceNameResolver<TParent>;
  absolutePath?: FileToAbsolutePathResolver<TParent>;
  relativePath?: FileToRelativePathResolver<TParent>;
  extension?: FileToExtensionResolver<TParent>;
  size?: FileToSizeResolver<TParent>;
  prettySize?: FileToPrettySizeResolver<TParent>;
  modifiedTime?: FileToModifiedTimeResolver<TParent>;
  accessTime?: FileToAccessTimeResolver<TParent>;
  changeTime?: FileToChangeTimeResolver<TParent>;
  birthTime?: FileToBirthTimeResolver<TParent>;
  root?: FileToRootResolver<TParent>;
  dir?: FileToDirResolver<TParent>;
  base?: FileToBaseResolver<TParent>;
  ext?: FileToExtResolver<TParent>;
  name?: FileToNameResolver<TParent>;
  relativeDirectory?: FileToRelativeDirectoryResolver<TParent>;
  dev?: FileToDevResolver<TParent>;
  mode?: FileToModeResolver<TParent>;
  nlink?: FileToNlinkResolver<TParent>;
  uid?: FileToUidResolver<TParent>;
  gid?: FileToGidResolver<TParent>;
  rdev?: FileToRdevResolver<TParent>;
  blksize?: FileToBlksizeResolver<TParent>;
  ino?: FileToInoResolver<TParent>;
  blocks?: FileToBlocksResolver<TParent>;
  atimeMs?: FileToAtimeMsResolver<TParent>;
  mtimeMs?: FileToMtimeMsResolver<TParent>;
  ctimeMs?: FileToCtimeMsResolver<TParent>;
  birthtimeMs?: FileToBirthtimeMsResolver<TParent>;
  atime?: FileToAtimeResolver<TParent>;
  mtime?: FileToMtimeResolver<TParent>;
  ctime?: FileToCtimeResolver<TParent>;
  birthtime?: FileToBirthtimeResolver<TParent>;
  publicURL?: FileToPublicURLResolver<TParent>;
}

export interface FileToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToChildMarkdownRemarkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToSourceInstanceNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToAbsolutePathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToRelativePathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToExtensionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToSizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToPrettySizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToModifiedTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToModifiedTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToModifiedTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToAccessTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToAccessTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToAccessTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToChangeTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToChangeTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToChangeTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBirthTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToBirthTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToBirthTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToRootResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToDirResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBaseResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToExtResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToRelativeDirectoryResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToDevResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToModeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToNlinkResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToUidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToGidResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToRdevResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBlksizeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToInoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBlocksResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToAtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToMtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToCtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBirthtimeMsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToAtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToAtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToAtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToMtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToMtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToMtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToCtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToCtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToCtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToBirthtimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface FileToBirthtimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: FileToBirthtimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface FileToPublicURLResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLMarkdownRemarkTypeResolver<TParent = any> {
  id?: MarkdownRemarkToIdResolver<TParent>;
  parent?: MarkdownRemarkToParentResolver<TParent>;
  children?: MarkdownRemarkToChildrenResolver<TParent>;
  internal?: MarkdownRemarkToInternalResolver<TParent>;
  frontmatter?: MarkdownRemarkToFrontmatterResolver<TParent>;
  rawMarkdownBody?: MarkdownRemarkToRawMarkdownBodyResolver<TParent>;
  fileAbsolutePath?: MarkdownRemarkToFileAbsolutePathResolver<TParent>;
  html?: MarkdownRemarkToHtmlResolver<TParent>;
  htmlAst?: MarkdownRemarkToHtmlAstResolver<TParent>;
  excerpt?: MarkdownRemarkToExcerptResolver<TParent>;
  headings?: MarkdownRemarkToHeadingsResolver<TParent>;
  timeToRead?: MarkdownRemarkToTimeToReadResolver<TParent>;
  tableOfContents?: MarkdownRemarkToTableOfContentsResolver<TParent>;
  wordCount?: MarkdownRemarkToWordCountResolver<TParent>;
}

export interface MarkdownRemarkToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToFrontmatterResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToRawMarkdownBodyResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToFileAbsolutePathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToHtmlResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToHtmlAstResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToExcerptArgs {
  pruneLength?: number;
  truncate?: boolean;
  format?: GQLExcerptFormats;
}
export interface MarkdownRemarkToExcerptResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MarkdownRemarkToExcerptArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToHeadingsArgs {
  depth?: GQLHeadingLevels;
}
export interface MarkdownRemarkToHeadingsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MarkdownRemarkToHeadingsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToTimeToReadResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToTableOfContentsArgs {
  pathToSlugField?: string;
}
export interface MarkdownRemarkToTableOfContentsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MarkdownRemarkToTableOfContentsArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkToWordCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_11TypeResolver<TParent = any> {
  content?: internal_11ToContentResolver<TParent>;
  type?: internal_11ToTypeResolver<TParent>;
  contentDigest?: internal_11ToContentDigestResolver<TParent>;
  owner?: internal_11ToOwnerResolver<TParent>;
}

export interface internal_11ToContentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_11ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_11ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_11ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLfrontmatter_2TypeResolver<TParent = any> {
  title?: frontmatter_2ToTitleResolver<TParent>;
  path?: frontmatter_2ToPathResolver<TParent>;
  date?: frontmatter_2ToDateResolver<TParent>;
  _PARENT?: frontmatter_2To_PARENTResolver<TParent>;
}

export interface frontmatter_2ToTitleResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface frontmatter_2ToPathResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface frontmatter_2ToDateArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface frontmatter_2ToDateResolver<TParent = any, TResult = any> {
  (parent: TParent, args: frontmatter_2ToDateArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface frontmatter_2To_PARENTResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLMarkdownHeadingTypeResolver<TParent = any> {
  value?: MarkdownHeadingToValueResolver<TParent>;
  depth?: MarkdownHeadingToDepthResolver<TParent>;
}

export interface MarkdownHeadingToValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownHeadingToDepthResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLwordCountTypeResolver<TParent = any> {
  paragraphs?: wordCountToParagraphsResolver<TParent>;
  sentences?: wordCountToSentencesResolver<TParent>;
  words?: wordCountToWordsResolver<TParent>;
}

export interface wordCountToParagraphsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface wordCountToSentencesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface wordCountToWordsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_10TypeResolver<TParent = any> {
  contentDigest?: internal_10ToContentDigestResolver<TParent>;
  type?: internal_10ToTypeResolver<TParent>;
  mediaType?: internal_10ToMediaTypeResolver<TParent>;
  description?: internal_10ToDescriptionResolver<TParent>;
  owner?: internal_10ToOwnerResolver<TParent>;
}

export interface internal_10ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_10ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_10ToMediaTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_10ToDescriptionResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_10ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLfileGroupConnectionConnectionTypeResolver<TParent = any> {
  pageInfo?: fileGroupConnectionConnectionToPageInfoResolver<TParent>;
  edges?: fileGroupConnectionConnectionToEdgesResolver<TParent>;
  field?: fileGroupConnectionConnectionToFieldResolver<TParent>;
  fieldValue?: fileGroupConnectionConnectionToFieldValueResolver<TParent>;
  totalCount?: fileGroupConnectionConnectionToTotalCountResolver<TParent>;
}

export interface fileGroupConnectionConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionConnectionToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionConnectionToFieldValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLfileGroupConnectionEdgeTypeResolver<TParent = any> {
  node?: fileGroupConnectionEdgeToNodeResolver<TParent>;
  next?: fileGroupConnectionEdgeToNextResolver<TParent>;
  previous?: fileGroupConnectionEdgeToPreviousResolver<TParent>;
}

export interface fileGroupConnectionEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface fileGroupConnectionEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLMarkdownRemarkConnectionTypeResolver<TParent = any> {
  pageInfo?: MarkdownRemarkConnectionToPageInfoResolver<TParent>;
  edges?: MarkdownRemarkConnectionToEdgesResolver<TParent>;
  totalCount?: MarkdownRemarkConnectionToTotalCountResolver<TParent>;
  distinct?: MarkdownRemarkConnectionToDistinctResolver<TParent>;
  group?: MarkdownRemarkConnectionToGroupResolver<TParent>;
}

export interface MarkdownRemarkConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkConnectionToDistinctArgs {
  field?: GQLmarkdownRemarkDistinctEnum;
}
export interface MarkdownRemarkConnectionToDistinctResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MarkdownRemarkConnectionToDistinctArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkConnectionToGroupArgs {
  skip?: number;
  limit?: number;
  field?: GQLmarkdownRemarkGroupEnum;
}
export interface MarkdownRemarkConnectionToGroupResolver<TParent = any, TResult = any> {
  (parent: TParent, args: MarkdownRemarkConnectionToGroupArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLMarkdownRemarkEdgeTypeResolver<TParent = any> {
  node?: MarkdownRemarkEdgeToNodeResolver<TParent>;
  next?: MarkdownRemarkEdgeToNextResolver<TParent>;
  previous?: MarkdownRemarkEdgeToPreviousResolver<TParent>;
}

export interface MarkdownRemarkEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface MarkdownRemarkEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLmarkdownRemarkGroupConnectionConnectionTypeResolver<TParent = any> {
  pageInfo?: markdownRemarkGroupConnectionConnectionToPageInfoResolver<TParent>;
  edges?: markdownRemarkGroupConnectionConnectionToEdgesResolver<TParent>;
  field?: markdownRemarkGroupConnectionConnectionToFieldResolver<TParent>;
  fieldValue?: markdownRemarkGroupConnectionConnectionToFieldValueResolver<TParent>;
  totalCount?: markdownRemarkGroupConnectionConnectionToTotalCountResolver<TParent>;
}

export interface markdownRemarkGroupConnectionConnectionToPageInfoResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionConnectionToEdgesResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionConnectionToFieldResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionConnectionToFieldValueResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionConnectionToTotalCountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLmarkdownRemarkGroupConnectionEdgeTypeResolver<TParent = any> {
  node?: markdownRemarkGroupConnectionEdgeToNodeResolver<TParent>;
  next?: markdownRemarkGroupConnectionEdgeToNextResolver<TParent>;
  previous?: markdownRemarkGroupConnectionEdgeToPreviousResolver<TParent>;
}

export interface markdownRemarkGroupConnectionEdgeToNodeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionEdgeToNextResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface markdownRemarkGroupConnectionEdgeToPreviousResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLSiteTypeResolver<TParent = any> {
  id?: SiteToIdResolver<TParent>;
  parent?: SiteToParentResolver<TParent>;
  children?: SiteToChildrenResolver<TParent>;
  siteMetadata?: SiteToSiteMetadataResolver<TParent>;
  port?: SiteToPortResolver<TParent>;
  host?: SiteToHostResolver<TParent>;
  pathPrefix?: SiteToPathPrefixResolver<TParent>;
  polyfill?: SiteToPolyfillResolver<TParent>;
  buildTime?: SiteToBuildTimeResolver<TParent>;
  internal?: SiteToInternalResolver<TParent>;
}

export interface SiteToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToParentResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToChildrenResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToSiteMetadataResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToPortArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface SiteToPortResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SiteToPortArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToHostResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToPathPrefixResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToPolyfillResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToBuildTimeArgs {
  formatString?: string;
  fromNow?: boolean;
  difference?: string;
  locale?: string;
}
export interface SiteToBuildTimeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: SiteToBuildTimeArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface SiteToInternalResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLsiteMetadata_2TypeResolver<TParent = any> {
  name?: siteMetadata_2ToNameResolver<TParent>;
  tagline?: siteMetadata_2ToTaglineResolver<TParent>;
}

export interface siteMetadata_2ToNameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface siteMetadata_2ToTaglineResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLinternal_12TypeResolver<TParent = any> {
  contentDigest?: internal_12ToContentDigestResolver<TParent>;
  type?: internal_12ToTypeResolver<TParent>;
  owner?: internal_12ToOwnerResolver<TParent>;
}

export interface internal_12ToContentDigestResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_12ToTypeResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface internal_12ToOwnerResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}
